plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.3.0'
}

jib {
    from {
        auth {
            username = System.getenv("DOCKERHUB_ID")
            password = System.getenv("DOCKERHUB_PW")
        }
    }
    to {
        image = System.getenv("DOCKERHUB_IMG_ALERT")
        tags = [System.getenv("IMG_TAG")]
        auth {
            username = System.getenv("DOCKERHUB_ID")
            password = System.getenv("DOCKERHUB_PW")
        }
    }
    container {
        environment = [
                "NOCTEM_JWT_SIGNER": System.getenv("NOCTEM_JWT_SIGNER"),
                "EUREKA_SERVER"    : "eureka",
                "MYSQL_SERVER"     : "mysqldb",
                "KAFKA_SERVER"     : "kafka",
                "CONFIG_SERVER"    : "config",
                "REDIS_SERVER"     : "redis",
                "USER_SERVICE"     : "user-service",
                "PURCHASE_SERVICE" : "purchase-service",
                "MENU_SERVICE"     : "menu-service",
                "STORE_SERVICE"    : "store-service",
                "ADMIN_SERVICE"    : "admin-service",
                "GIFT_SERVICE"     : "gift-service"
        ]
    }
}

group = 'noctem'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.projectreactor.kafka:reactor-kafka:1.3.13'
    implementation 'org.springframework.kafka:spring-kafka:2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

ext {
    set('springCloudVersion', "2021.0.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
