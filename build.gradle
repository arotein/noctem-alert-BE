plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'com.google.cloud.tools.jib' version '3.3.0'
}

jib {
    from {
        image = 'eclipse-temurin:11-jre-alpine'
        auth {
            username = System.getenv("DOCKERHUB_ID")
            password = System.getenv("DOCKERHUB_PW")
        }
    }
    to {
        image = System.getenv("DOCKERHUB_IMG_ALERT")
        tags = [System.getenv("IMG_TAG")]
        auth {
            username = System.getenv("DOCKERHUB_ID")
            password = System.getenv("DOCKERHUB_PW")
        }
    }
}

group = 'noctem'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.projectreactor.kafka:reactor-kafka:1.3.13'
    implementation 'org.springframework.kafka:spring-kafka:2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'io.fusionauth:fusionauth-jwt:5.2.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

ext {
    set('springCloudVersion', "2021.0.4")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
