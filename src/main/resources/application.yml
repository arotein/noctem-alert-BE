global:
  service-name: alert-server
  api:
    base-path: /sse/${global.service-name}
  jwt-token:
    signer: ${NOCTEM_JWT_SIGNER}

server:
  port: 33333
  servlet:
    encoding:
      charset: UTF-8
      enable: true
      force: true
  shutdown: graceful
  http2.enabled: true
  ssl:
    enabled: true
    enabled-protocols: TLSv1.3
    key-store: classpath:cert.p12
    key-store-type: PKCS12
    key-store-password: ${SSL_KEY_PASSWORD}

spring:
  application:
    name: ${global.service-name}
  config:
    import: optional:configserver:http://${CONFIG_SERVER}:8888
  profiles:
    active: ${PROFILE}
  cloud:
    config:
      fail-fast: true
    bus:
      enabled: true
      refresh:
        enabled: true
      destination: config-topic
  kafka:
    bootstrap-servers: http://${KAFKA_SERVER}:9092
    consumer:
      group-id: ${random.uuid}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  redis:
    host: ${REDIS_HOST}
    port: 6379

management:
  endpoints:
    web:
      base-path: /sse/${global.service-name}/actuator
      exposure:
        include: health, refresh, httptrace, busrefresh, prometheus, metrics
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${global.service-name}

logging:
  level:
    root: info