server:
  port: 33333
  servlet:
    encoding:
      charset: UTF-8
      enable: true
      force: true
  shutdown: graceful
  http2.enabled: true
  ssl:
    enabled: true
    enabled-protocols: TLSv1.3
    key-store: classpath:cert.p12
    key-store-type: PKCS12
    key-store-password: noctem

#eureka:
#  instance:
#    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://${EUREKA_SERVER}:8761/eureka

spring:
  application:
    name: alert-server
  config:
    import: optional:configserver:http://${CONFIG_SERVER}:8888
  profiles:
    active: ${PROFILE}
  cloud:
    config:
      fail-fast: true
    bus:
      enabled: true
      refresh:
        enabled: true
      destination: config-topic
  kafka:
    bootstrap-servers: http://${KAFKA_SERVER}:9092
    consumer:
      group-id: ${random.uuid}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

management:
  endpoints:
    web:
      base-path: /sse/alert-server/actuator
      exposure:
        include: health, refresh, httptrace, busrefresh, prometheus, metrics
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}

logging:
  charset:
    console: UTF-8
    file: UTF-8
  level:
    root: info

global:
  jwt-token:
    signer: ${NOCTEM_JWT_SIGNER}
  api:
    base-path: /sse/alert-server

